{"version":3,"sources":["GDImageViewer.js","example/ExampleGDrive.js","index.js"],"names":["GDImageViewer","keys","options","useState","imgIds","setImgIds","style","setStyle","hover","setHover","newWindow","setNewWindw","clickable","setClickable","modal","setModal","classNames","setClassNames","ids","setIds","excludes","setExcludes","GOOGLE_API_KEY","gkey","GOOGLE_DRIVE_URL_START","GOOGLE_DRIVE_URL_END","GOOGLE_DRIVE_IMG_URL","ModalView","props","id","className","alt","useEffect","a","fetch","dirId","then","response","json","jsonResp","items","catch","error","loadData","onClick","attachClass","attachId","exclude","loadSettings","renderImages","item","i","imageContainerClass","imgId","document","getElementById","src","display","getElementsByClassName","onclick","showModal","title","parentContainerClass","map","R","match","href","target","renderMain","ExampleGDrive","width","height","rel","ReactDOM","render"],"mappings":"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","file":"static/js/main.73287600.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as R from 'ramda'\r\nimport \"./GDImageViewer.css\";\r\nfunction GDImageViewer({keys, options}) {\r\n  const [imgIds, setImgIds] = useState([]);\r\n\r\n  const [style, setStyle] = useState({});\r\n\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const [newWindow, setNewWindw] = useState(false);\r\n\r\n  const [clickable, setClickable] = useState(false);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [classNames, setClassNames] = useState(null);\r\n\r\n  const [ids, setIds] = useState(null);\r\n\r\n  const [excludes, setExcludes] = useState(null);\r\n\r\n  const GOOGLE_API_KEY = keys.gkey;\r\n  const GOOGLE_DRIVE_URL_START =\r\n    \"https://www.googleapis.com/drive/v2/files?q=%27\";\r\n  const GOOGLE_DRIVE_URL_END = \"%27+in+parents&key=\";\r\n  const GOOGLE_DRIVE_IMG_URL = \"http://drive.google.com/uc?export=view&id=\";\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      await fetch(\r\n        GOOGLE_DRIVE_URL_START +\r\n        keys.dirId +\r\n        GOOGLE_DRIVE_URL_END +\r\n        GOOGLE_API_KEY\r\n      )\r\n        .then(response => response.json())\r\n        .then(jsonResp => {\r\n          setImgIds(jsonResp.items);\r\n        }).catch((error) => {\r\n        });\r\n    }\r\n    loadData()\r\n    loadSettings(options);\r\n    \r\n  }, [options, keys, GOOGLE_API_KEY]);\r\n\r\n  function loadSettings(options) {\r\n    if (options.style) {\r\n      setStyle(options.style);\r\n    }\r\n    if (options.onClick) {\r\n      setClickable(true);\r\n      if (options.onClick.newWindow) {\r\n        setNewWindw(true);\r\n      }\r\n      if (options.onClick.modal) {\r\n        setModal(true);\r\n      }\r\n    }\r\n    if (options.hover) {\r\n      setHover(true);\r\n    }\r\n\r\n\r\n    if (options.attachClass) {\r\n      setClassNames(options.attachClass);\r\n    }\r\n\r\n    if (options.attachId) {\r\n      setIds(options.attachId);\r\n    }\r\n    if (options.exclude) {\r\n      setExcludes(options.exclude);\r\n    }\r\n  }\r\n\r\n \r\n\r\n  function checkFormat(url) {\r\n    return url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\r\n  }\r\n\r\n  function ModalView(props) {\r\n    return (\r\n      <div>\r\n        <div id=\"modal-container\" className=\"modal\">\r\n          <span className=\"close\">&times;</span>\r\n          <img className=\"modal-content\" id=\"curr-modal\" alt=\"\" />\r\n          <div id=\"caption\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function showModal(imgId) {\r\n    const modal = document.getElementById(\"modal-container\");\r\n    const modalImg = document.getElementById(\"curr-modal\");\r\n    modalImg.src = imgId;\r\n    modal.style.display = \"block\";\r\n    const span = document.getElementsByClassName(\"close\")[0];\r\n    span.onclick = function () {\r\n      modal.style.display = \"none\";\r\n    };\r\n  }\r\n\r\n  const renderImages = (className, id, exclude, item ,i) => {\r\n    return (\r\n      <div key={i} className={options.imageContainerClass}>\r\n        {!exclude && (\r\n          <img\r\n            style={style}\r\n            className={\r\n              (clickable ? \" gd-pointer \" : \"\") +\r\n              (\" gd-img \") +\r\n              (hover ? \" gd-pointer gd-hover \" : \"\") + className\r\n            }\r\n            onClick={() => {\r\n              modal && showModal(GOOGLE_DRIVE_IMG_URL + item.id);\r\n            }}\r\n            src={GOOGLE_DRIVE_IMG_URL + item.id}\r\n            id={id ? id : null}\r\n            key={i}\r\n            alt={item.title}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  const renderMain = (className, id, exclude, href, target, item, i) => {\r\n    if (!R.isEmpty(href)) {\r\n      return (\r\n        <a\r\n          href={href}\r\n          target={target}\r\n        >\r\n          {renderImages(className, id, exclude, item, i)}\r\n        </a>\r\n      )\r\n    }\r\n    return (\r\n      renderImages(className, id, exclude, item, i)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={options.parentContainerClass}>\r\n\r\n      {modal && <ModalView />}\r\n\r\n      {imgIds &&\r\n        imgIds.map((item, i) => {\r\n          const title = R.propOr(\"\", \"title\", item)\r\n          if (checkFormat(item.title)) {\r\n            const className = R.propOr(\"\", title, classNames)\r\n            const id = R.propOr(\"\", title, ids)\r\n            const exclude = R.propOr(\"\", title, excludes);\r\n            const href = !modal && clickable ? GOOGLE_DRIVE_IMG_URL + item.id : \"\"\r\n            const target = newWindow ? \"_blank\" : \"\"\r\n            return(renderMain(className, id, exclude, href, target, item, i))\r\n          }\r\n          return <></>\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GDImageViewer;","import React from 'react';\r\nimport GImageViewer from '../GDImageViewer'\r\nimport './ExampleGDrive.css'\r\n\r\nconst ExampleGDrive = () => {\r\n    const options = {\r\n        style: {\r\n            width: \"150px\",\r\n            height: \"150px\"\r\n        },\r\n    \r\n    \r\n        onClick: {\r\n            modal: true,\r\n            newWindow: false\r\n        },\r\n\r\n    \r\n        exclude: {\r\n            \"1.jpg\": true\r\n        },\r\n    \r\n\r\n        attachClass: {\r\n            \"2.jpg\": \"test\"\r\n        },\r\n    \r\n\r\n        attachId: {\r\n            \"2.jpg\": \"test2\"\r\n        },\r\n    \r\n        hover: true,\r\n        imageContainerClass: \"inline\",\r\n        parentContainerClass: \"main-content\"\r\n    }\r\n\r\n    const keys = {\r\n        gkey: \"AIzaSyBB4j8mb7qH8Mo-EThFjGoQWp7vhqzaDjs\", //change this to your key\r\n        dirId: \"1HbRyDdXLnhmnDRj4n8eXnexKbEr2bw1N\" //change this to your directory key\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <h1>Example React-GDrive-Image-Viewer</h1>\r\n        <GImageViewer keys={keys} options={options}/>\r\n        <a className={\"text\"} rel=\"noopener noreferrer\" href={`https://drive.google.com/drive/u/2/folders/${keys.dirId}`} target=\"_blank\">Open folder on Google Drive with ID: {keys.dirId}</a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExampleGDrive;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ExampleGDrive from './example/ExampleGDrive'\r\n\r\nReactDOM.render(<ExampleGDrive />, document.getElementById('root'));\r\n"],"sourceRoot":""}